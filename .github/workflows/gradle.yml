name: Java CI with Gradle & Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for Gradle Wrapper
      run: chmod +x ./gradlew

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4.0.0

    # ✅ application.properties 파일 동적 생성
    - name: Generate application.properties
      run: |
        cat <<EOF > src/main/resources/application.properties
        spring.application.name=Club_House_API_Server

        # Database
        spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
        spring.datasource.url=${{ secrets.DB_URL }}
        spring.datasource.username=${{ secrets.DB_USER_NAME }}
        spring.datasource.password=${{ secrets.DB_PASSWORD }}

        # JPA
        spring.jpa.hibernate.ddl-auto=update
        spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
        spring.jpa.show-sql=false
        spring.jpa.format-sql=true

        # JWT
        jwt.secret=${{ secrets.JWT_SECRET_KEY }}
        jwt.expire=3600000

        # OpenAI API
        openai.api.key=${{ secrets.OPEN_AI_API_KEY }}
        openai.api.url=${{ secrets.OPEN_AI_API_URL }}
        openai.model=gpt-4o-mini

        # Whisper API
        whisper.api.url=https://api.openai.com/v1/chat/completions

        # S3
        cloud.aws.credentials.access-key=${{ secrets.AWS_CREDENTIALS_ACCESS_KEY }}
        cloud.aws.credentials.secret-key=${{ secrets.AWS_CREDENTIALS_SECRET_KEY }}
        cloud.aws.region.static=ap-northeast-2
        cloud.aws.s3.bucket=${{ secrets.AWS_BUCKET_NAME }}
        EOF

    # ✅ Gradle 빌드 실행 (환경 변수 자동 포함)
    - name: Build with Gradle Wrapper
      run: ./gradlew build -x test

    # ✅ Docker Hub 로그인
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PAT }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # ✅ Docker 이미지 빌드
    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/onclub-api:latest .

    # ✅ Docker Hub에 푸시
    - name: Push Docker Image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/onclub-api:latest

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@v4.0.0
